module.exports = {
  root: true,
  env: {
    node: true,
  },
  ignorePatterns: ['src/assets/**'],
  plugins: ['vuejs-accessibility', '@typescript-eslint', 'jest-dom'],
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:vue/vue3-recommended',
    'plugin:vuejs-accessibility/recommended',
    'plugin:jest-dom/recommended',
    'prettier',
  ],
  parserOptions: {
    ecmaVersion: 2020,
    parser: '@typescript-eslint/parser',
  },
  rules: {
    'no-console': process.env.NODE_ENV === 'production' ? 'warn' : 'off',
    'no-debugger': process.env.NODE_ENV === 'production' ? 'warn' : 'off',
    'vuejs-accessibility/label-has-for': [
      'warn',
      {
        required: 'id',
        allowChildren: false,
      },
    ],
    'vue/multi-word-component-names': [
      'error',
      {
        ignores: ['[...fallback]', 'default', 'index'],
      },
    ],
    'no-undef': 'warn',
    'sort-imports': 'warn',
  },
  overrides: [
    {
      files: [
        '**/__tests__/*.{j,t}s?(x)',
        '**/tests/unit/**/*.spec.{j,t}s?(x)',
      ],
      env: {
        jest: true,
      },
    },
  ],

  globals: {
    // TODO: reevaluate at future Nuxt version release
    $fetch: false,
    addRouteMiddleware: false,
    computed: false,
    customRef: false,
    defineAsyncComponent: false,
    defineComponent: false,
    defineEmits: false,
    defineNuxtComponent: false,
    defineNuxtPlugin: false,
    definePageMeta: false,
    defineProps: false,
    effectScope: false,
    getCurrentInstance: false,
    getCurrentScope: false,
    h: false,
    inject: false,
    isReactive: false,
    isReadonly: false,
    isRef: false,
    markRaw: false,
    nextTick: false,
    onActivated: false,
    onBeforeMount: false,
    onBeforeUnmount: false,
    onBeforeUpdate: false,
    onDeactivated: false,
    onErrorCaptured: false,
    onMounted: false,
    onScopeDispose: false,
    onServerPrefetch: false,
    onUnmounted: false,
    onUpdated: false,
    provide: false,
    proxyRefs: false,
    reactive: false,
    readonly: false,
    ref: false,
    shallowReactive: false,
    shallowReadonly: false,
    shallowRef: false,
    toRaw: false,
    toRef: false,
    toRefs: false,
    triggerRef: false,
    unref: false,
    useAsyncData: false,
    useAttrs: false,
    useCssModule: false,
    useFetch: false,
    useLazyAsyncData: false,
    useLazyFetch: false,
    useMeta: false,
    useNuxtApp: false,
    useRoute: false,
    useRouter: false,
    useRuntimeConfig: false,
    useSlots: false,
    useState: false,
    watch: false,
    watchEffect: false,
    withDefaults: false,
  },
};
